<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ChenHsingYu</title>
    <link>https://idreamshen.github.io/</link>
    <description>Recent content on ChenHsingYu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 05 Apr 2023 12:00:00 +0800</lastBuildDate><atom:link href="https://idreamshen.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minecraft 1.9.12 私服新人游戏安装指南</title>
      <link>https://idreamshen.github.io/posts/2023-minecraft-private-server-guide/</link>
      <pubDate>Wed, 05 Apr 2023 12:00:00 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/2023-minecraft-private-server-guide/</guid>
      <description> 本文为 MC 新人内部指南，仅供群友参考使用。
  下载群公告中的 minecraft-windows.zip （osx 系统下载 minecraft-osx.zip ）
  解压缩 minecraft-windows.zip 并运行 HMCL-3.5.4.exe 该启动器
  等待 HMCL 自动下载完成游戏主体文件，可能需要5分钟左右   点击右下角“启动游戏”，在“离线模式”中设置自己的英文用户名（该用户名会在游戏中展示）   首次运行可能会弹出“警告，需要 Java 17 或更高版本”的提示，我们选择“是”让它自动下载   接下来 Minecraft 游戏主体启动，点“多人游戏－添加服务器”，服务器地址填入群公告中的服务器地址，再点击完成   此时“多人游戏”的列表中会出现刚才添加的服务器，点击“加入服务器”   首次进入游戏需要设置登录密码。按下键盘 t 唤起聊天框，按照提示输入 /register password password ，并回车以完成账号注册。 比如你想设置密码为 123456 ，那就输入 /register 123456 123456 后回车即可进入游戏。   二次登录时，无需注册，但需要输入命令 /login password 进行登录。比如 /login 123456 即以密码 123456 登录。   </description>
    </item>
    
    <item>
      <title>使用 Node-Red 对 Volvo On Call 的地理位置纠偏</title>
      <link>https://idreamshen.github.io/posts/homeassistant-node-red-fix-car-gps/</link>
      <pubDate>Wed, 16 Mar 2022 21:47:49 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/homeassistant-node-red-fix-car-gps/</guid>
      <description>背景  最近在 Home Assistant 中接入了官方集成 Volvo On Call，确实能很方便的获取车辆各种信息以及控制车辆。但有一个问题就是 Volvo On Call 上传的地理坐标是 GCJ-02 火星坐标系，而 Home Assistant 使用的是 WGS84 坐标系，这会导致 Volvo 车辆的坐标产生偏离，比如判定车辆是否在家中都会产生问题。
  解决方案  大致流程    在 Home Assistant 生成一个新的 device tracker
  使用 node-red 轮询 volvo on call 上报的坐标，并经过 js 脚本转换坐标，再调用 device_tracker.see 服务更新第1步中的 device tracker 坐标
  使用第1步中的 device tracker 作为实体在 Home Assistant 中进行地理距离的判定运算等
    详细步骤    在 /config/configuration.</description>
    </item>
    
    <item>
      <title>Github Clone: Connection closed by remote host</title>
      <link>https://idreamshen.github.io/posts/github-connection-closed/</link>
      <pubDate>Mon, 14 Mar 2022 12:12:02 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/github-connection-closed/</guid>
      <description>背景  今天尝试克隆 Github 仓库时遇到了诡异的报措 kex_exchange_identification: Connection closed by remote host 。随即做如下检查：
  Github 平台与本地的 ssh key 均配置正常
  本地 ~/.ssh/config~ 中没有开启 proxy 代理配置
  执行命令 ssh -T git@github.com 返回如下结果
  $ ssh -T git@github.com kex_exchange_identification: Connection closed by remote host    原因  家中使用的梯子封禁了 Github 端口 22 的连接
  解决  将 Github 的连接端口从 22 改为 443 即可。修改 ~/.ssh/config ，添加如下段落即可
Host github.</description>
    </item>
    
    <item>
      <title>SpringBoot 启动分析笔记</title>
      <link>https://idreamshen.github.io/posts/springboot-startup-learn-notes/</link>
      <pubDate>Mon, 10 Aug 2020 18:11:28 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/springboot-startup-learn-notes/</guid>
      <description>代码流程  SpringApplication.run()  public static ConfigurableApplicationContext run(Object source, String... args) { return run(new Object[] { source }, args); } public static ConfigurableApplicationContext run(Object[] sources, String[] args) { // 先实例化 SpringApplication  return new SpringApplication(sources) // 再执行 run 方法  .run(args); }    SpringApplication 实例化  public SpringApplication(Object... sources) { initialize(sources); } private void initialize(Object[] sources) { this.sources.addAll(Arrays.asList(sources)); /* ,* 推断是否是 web 环境 ,* 满足 web 环境的条件是必须同时存在以下的类 ,* 1.</description>
    </item>
    
    <item>
      <title>如何加快 helm-projectile-find-file 的执行速度</title>
      <link>https://idreamshen.github.io/posts/how-to-speed-up-helm-projectile-find-file/</link>
      <pubDate>Tue, 04 Aug 2020 17:58:19 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/how-to-speed-up-helm-projectile-find-file/</guid>
      <description>背景  最近在 Emacs 中使用 helm-projectile-find-file 命令搜索源码文件时，发现卡顿很严重。后寻找资料发现原来是 helm 的搜索框内默认使用了 Fuzzy 搜索方式，导致搜索时间复杂度上升。
  解决方案  只需要在待搜索字符串前输入一个空格即可取消 Fuzzy 搜索模式。比如想搜索 ArrayList.java ，则需输入 [space]ArrayList.java （注意：[space] 表示空格）
 查阅以下 Helm 的帮助文档可知当输入空格时，将不启用 Fuzzy 模式。
All that you write in minibuffer is interpreted as a regexp or multiple regexps if separated by a space. This is true for most sources unless the developer of the source has disabled it or have choosen to use fuzzy matching.</description>
    </item>
    
    <item>
      <title>Mac系统中如何修改主显示屏</title>
      <link>https://idreamshen.github.io/posts/how-to-switch-primary-monitor-on-mac/</link>
      <pubDate>Tue, 28 Jul 2020 20:14:08 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/how-to-switch-primary-monitor-on-mac/</guid>
      <description> 背景  给笔记本外接了显示器，同时期望将外接显示器作为主显示器。但是使用过程中发现外接显示器并不是主显示器。比如在用 Alfred 时，其唤起的输入框是在笔记本上展示，而不是在外接显示器上展示，整体操作体验不流畅。具体的解决方案如下。
  操作    打开“系统偏好设置”
  点击“显示器”
  点击“排列”，如下图。注意图中的红框内的白条，这个白条是可以拖动的
  图1
  拖动白条，将其移动到另一块“显示屏”上，即可完成主显示器的切换
  图2
  </description>
    </item>
    
    <item>
      <title>羽毛球</title>
      <link>https://idreamshen.github.io/posts/badminton/</link>
      <pubDate>Thu, 22 Aug 2019 22:01:41 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/badminton/</guid>
      <description>今天是周四，晚上下班后，我与往常一样背上了羽毛球拍，前往佩佩公司。今天很是期待和佩佩的配合是否有显著提高，因为上周六和佩佩单独练习了两个小时，我感觉佩佩掌握到了一些羽毛球的规律。
 这次两个场地，只来了六个人。那正好，一边单打，一边双打。我和佩佩自然是选择了双打的那一方，我也是信心满满的。果然，虽然对方是两位男生，但实力不及我们，基本上打个高远球或带角度的球就大概率能取胜。我们这一方虽然胜率很高，但是佩佩的发球、接球、跑位等全都表现的很不好，远不如上周六我们单独练习时候的状态。于是，我开启了“叨叨”模式，只要我觉得佩佩哪里不对，我就会“叨念”一下。整整三场比赛就在我这不停的“叨念”下结束了，虽然我们赢了不少球，但是赢得不开心，因为佩佩不开心了。
 假如我和一位高手一起双打时，那位高手不断的指出我的错误点，那我也会觉得有些烦躁。内心会有一种声音“你别总指指点点了，我自己会打好的”。佩佩也是一样的，更何况我不是什么高手，我只能算是菜鸟中比较会打羽毛球的。我这样的水平还不断的指指点点，那佩佩内心是大写的不服。同时，我的教导方式也有问题。我是生搬硬套把之前别人教我的方式，原封不动的在教佩佩，这显然是行不通的，因为我和佩佩对待羽毛球这项运动的思路是不同的。佩佩认为羽毛球主要是锻炼身体，工作过后的放松放松，水平循序渐进即可。而我觉得羽毛球是个竞技运动，比的就是技巧水平，所以既然要打羽毛球，那就要打得比别人好，要赢。这两种心态也就造成了我们在羽毛球上的理解大不相同了。我在这个度上拿捏的很不好，过于陶醉于自己的节奏中，而忽略了佩佩内心的真实感受。
 经过我们互相阐述各自的内心思考，这会佩佩已经很开心了。所以下周羽毛球接着打，不过我要好好把握下教导方式了。
 对了，因为今天惹佩佩不高兴了，所以这个周末安排一次出省游玩。</description>
    </item>
    
    <item>
      <title>Emacs 入门</title>
      <link>https://idreamshen.github.io/posts/emacs-beginner/</link>
      <pubDate>Fri, 31 May 2019 19:13:17 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/emacs-beginner/</guid>
      <description>基础概念    Mac 系统中有两个按键是长按的。第一个是 Ctrl 键，在 Emacs 中也表示 Ctrl 键，简写为 C。另一个是 option 键，在 Emacs 中表示为 Meta 键，简写为 M。
  使用 C-x C-c 退出 Emacs
  使用 C-g 即可中断当前的各种按键操作
    启动 Emacs    在命令行输入 emacs 即可启动
  第一次打开会进入欢迎界面，按键 C-x b 进行切换 Buffer（C-x b 中的 b 就是 buffer），第一个默认 buffer 是 *scratch*，回车即可
  然后随便输入几个字符，打打回车等
    光标移动    C-n 移动到下一行。n 代表 next。</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://idreamshen.github.io/about/</link>
      <pubDate>Wed, 06 Feb 2019 16:49:14 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/about/</guid>
      <description>Email: idream.shen#gmail.com Github: https://github.com/idreamshen  有任何问题均可以通过邮箱联系到我 :)</description>
    </item>
    
    <item>
      <title>回首 2018</title>
      <link>https://idreamshen.github.io/posts/2018-review/</link>
      <pubDate>Sat, 02 Feb 2019 19:59:07 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/2018-review/</guid>
      <description>2018 年末看到很多人在做年终总结，自己也是心痒痒，想着也该总结总结。可这一想一拖，一个月便过去了。而如今马上就要迎来农历 2019 年，所以今天务必执笔写下自己的想法。
工作  2018 年的 5 月，我从一家工作了近 4 年的创业公司跳槽至了 N 司。这对我的职业生涯来说，确实是一大转折。这家创业公司我暂且称为 V 司吧。当年我是以一个机械行业的大学学渣身份，凭借着对计算机的满腔热血侥幸加入了 V 司。在 V 司我最欣赏的人是 Y 大。Y 大的到来使我在认知上产生了变革，我逐渐意识到演讲、沟通、影响力等的重要性。可以说，软实力这方面是我这一年体会比较深刻的，软实力和人的情商有关。工作环境里接触到的朋友智商差异其实并不大，但是情商却是完全不同。而我就是属于情商低的那一类人。
 离开 V 司后，我仍然与 V 司的小伙伴们保持的联系，所以他们也时不时的问我有没有回归的想法。而对于这个问题，我确实是有自己的想法的。我很喜欢 V 司小团队内的凝聚力，同事之间愉快的相处，以及积极的学习氛围。我在 V 司待的时间也是格外的长久，所以我已经被定义为核心成员了。然而，我当时似乎并不理解什么是核心成员，只认为我不过是在这家公司待的比较久而已。现在对核心成员的定义有了新的认识：你参与了公司大大小小重要的业务，你不仅仅需要去解决业务的技术难题，你同时更需要把握产品未来的走向，你应当把更多的精力放置于团队身上，而不是只关注个人的成长。我当初认为自己最多是一名技术核心成员，其实这完全是错误的。这个年代往往缺少的是交叉型人才，技术、产品、管理这三者都懂的人才。你深耕某个领域没有问题，但是当你在小团队里想做成功一件事的时候，你需要的是多领域的知识。诚然，这次从 V 司离开是有些后悔的，因为我放弃了快速成为交叉型人才的最佳机会。但这后悔药吃了也没用，这些道理都是半年后才逐渐想通的。那回到一开始的问题，今年我要回归 V 司吗？我目前还无法给出答案，有待商榷。我现在最缺的东西是面包，N 司可以很稳定的向我供给面包，而 V 司的面包在如今的资本寒冬里多少会有缩水。19 年这一年的整体国内面包水平如何还不好说，但是在 N 司会有放心的保障。不论 19 年在哪家公司，我都应当向交叉型人才这个方向努力。
  生活  我挺喜欢打乒乓球的，所以刚入职 N 司的那段时间里天天打乒乓，水平也是有了不少进步。以前反手完全不会，现在倒也可以靠反手切磋好几个来回了。也通过乒乓结识了一帮球友，大家水平参差不齐，但打得依然很高兴。
 百词斩坚持了一段时间，最佳记录是连续背了 3 个月。但下半年期间单词就背得比较差，只是偶尔背背，坚持不下来。上班路上则习惯听播客。常听的有《潘吉 JENNY 告诉你》、《得意忘形》、《加州101》、《疯投圈》、《TED RADIO HOUR》这几档节目，像《得意忘形》和《疯投圈》是 JZ 推荐给我的，在此表示感谢。前面提到的播客基本与我本职工作无关，所以有一段时间我试着在路上去听技术类的播客，比如《极客时间》，但效果甚差，遂放弃。
 现在我已经可以熟练使用 Emacs 的 Org 模式对生活和工作进行关键事件记录了，包括我最近的文章也是使用 Org 格式进行编写的。</description>
    </item>
    
    <item>
      <title>1Password 快捷键</title>
      <link>https://idreamshen.github.io/posts/one-password-hotkey/</link>
      <pubDate>Thu, 03 Jan 2019 15:19:58 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/one-password-hotkey/</guid>
      <description>  1Password 是有快捷键的，我是用了一年后才知道。使用快捷键后真的是行云流水般的速度。 本文就介绍一下我自己 Mac 系统中常用的快捷键。
Command + \  呼出 1Password 浮动窗口并填充。在浏览器页面上呼出时，会自动过滤出匹配到的账号。如果是精确匹配的话，则会自动填充至表单中。如果不是精确匹配，那么需要使用方向键和回车键来选择填充。
  Command + Shift + C  复制 1Password 当前高亮的密码。当遇到非浏览器页面时，那就很难实现自动填充了。但是上面这个快捷键可以快速复制密码，然后在 Command + V 粘贴到软件的密码栏中即可。
  参考资料    1Password for Mac 使用指南
    </description>
    </item>
    
    <item>
      <title>伪造微信群发助手截图</title>
      <link>https://idreamshen.github.io/posts/wechat-broadcast-message-fake-picture/</link>
      <pubDate>Mon, 03 Dec 2018 15:16:57 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/wechat-broadcast-message-fake-picture/</guid>
      <description>需求是这样的，我妈公司搞商场活动，每天需要上传5张微信群发200人的截图。
 我第一反应是网上应该有微信聊天生成器这种，那会不会有微信群发助手生成器呢？很遗憾，我在 GitHub 上搜了一圈，没找到开源的微信聊天生成器，更不用说群发助手生成器了。怎么办呢？
 那我们先对这个截图需求进行拆解，逐一突破。
  群发助手的文案应当与活动文案一致
  群发助手的收件人人数必须是200人
  群发助手的收件人昵称应当很多，最后显示为 … 表示还有更多
  最后分析下来，采用方案就是利用修图达到伪造效果。下面分享下其中的一些步骤（以下步骤与上方序号并不是一一对应的）。
  找到3～4个微信好友，能接受你微信消息骚扰的那种。然后修改他们的微信备注名，备注名的要求是包含英文逗号，使得一个微信号的昵称看上去是几个微信号连起来的，比如“天空,Away,时间,加菲猫”
  打开微信群发助手，勾选刚刚备注过的微信好友，然后发送正确的文案。那么这时你会在群发助手历史记录里看到“4位收件人：xxx,xxx,xxx,xxx,xxx,xxx,xxx…”。因为刚刚这几位好友的昵称特别长，且包含英文逗号，所以展示的时候会被截断，同时从界面上看起来发给了不止4位好友
  接下来就剩一个“收件人人数”的问题了，那用修图的方式来进行篡改。这里为了控制经济成本（没买 Photoshop），所以使用了网上免费的在线图片编辑网站进行操作，我用的是 http://www.uupoop.com 这家。修改人数的数字，然后重新导出图片即可。
  最后来看一下对比图：
 原始图 伪造图
 注意，上面伪造图中数字字体是有问题的，细看是能发现字体不对的。但是就本需求实际来说，已经达到交付效果了。
 好了，在双12来临之前，都需要这么忙上一阵子了。</description>
    </item>
    
    <item>
      <title>修复 Chrome 控制台字体大小</title>
      <link>https://idreamshen.github.io/posts/fix-chrome-console-font-size/</link>
      <pubDate>Mon, 05 Nov 2018 19:23:00 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/fix-chrome-console-font-size/</guid>
      <description> 最近在调试 Web 应用时发现 Chrome 的控制台字体非常大，相当影响调试体验。在 Chrome 中调整了一遍字体相关的配置，仍然无效。 下图就是字体很大的情况：
 Chrome Console Large Font
 后来终于找到解决方案，原来可以通过快捷键调整字体大小。具体的操作步骤如下：
  打开 Chrome Console 界面
  使用鼠标激活 Console 界面，即保持当前焦点位于 Console 上
  使用 Command +/- 快捷键来放大或缩小字体，使用 Command 0 则是重置字体大小。（如果是 Windows 系统，则请使用 Control 键）
  Chrome Console Small Font
 参考资料
  https://stackoverflow.com/questions/7613546/increase-font-size-chrome-console
  </description>
    </item>
    
    <item>
      <title>如何观看 Netflix</title>
      <link>https://idreamshen.github.io/posts/how-to-watch-netflix/</link>
      <pubDate>Fri, 20 Apr 2018 16:14:14 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/how-to-watch-netflix/</guid>
      <description>前段时间用某云的 HK 节点自建梯子观看 Netflix 很流畅，但是最近发现 HK 节点已无法正常观看。更换了该云上的 IP 后依然无法正常观看。
 经过一番折腾，找到了一家不错的梯子，可以顺利观看 Netflix，下面就简要介绍一番。
  服务商为 https://hkssnetwork.net/
  注册 hkss 账号
  充值 11 元
  购买最低配的 50G 流量套餐
  在 iPad 上使用梯子连接新的服务器
  netflix.jpg
 由于 Netflix 无法截图播放界面，但是实测播放相当流畅，hava fun~</description>
    </item>
    
    <item>
      <title>使用 GIT 克隆指定 TAG 或分支</title>
      <link>https://idreamshen.github.io/posts/git-clone-specific-tag-or-branch/</link>
      <pubDate>Sat, 14 Apr 2018 15:33:31 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/git-clone-specific-tag-or-branch/</guid>
      <description> 命令  git clone -b &amp;#39;v2.0&amp;#39; --single-branch --depth 1 https://github.com/git/git.git    v2.0 代指 branch 或 tag
  depth 表示 clone 深度，如果待克隆的项目很大，同时您不关注代码的变更历史，那可以使用 depth=1 提高 clone 速度
    参考资料    Download a specific tag with Git
    </description>
    </item>
    
    <item>
      <title>从 JDK Hotspot 源码探讨线程状态</title>
      <link>https://idreamshen.github.io/posts/thread-status-from-jdk-hotspot/</link>
      <pubDate>Wed, 11 Apr 2018 13:54:13 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/thread-status-from-jdk-hotspot/</guid>
      <description>src/share/vm/classfile/javaClasses.hpp
// Java Thread Status for JVMTI and M&amp;amp;M use. // This thread status info is saved in threadStatus field of // java.lang.Thread java class. enum ThreadStatus { NEW = 0, RUNNABLE = JVMTI_THREAD_STATE_ALIVE + // runnable / running  JVMTI_THREAD_STATE_RUNNABLE, SLEEPING = JVMTI_THREAD_STATE_ALIVE + // Thread.sleep()  JVMTI_THREAD_STATE_WAITING + JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT + JVMTI_THREAD_STATE_SLEEPING, IN_OBJECT_WAIT = JVMTI_THREAD_STATE_ALIVE + // Object.wait()  JVMTI_THREAD_STATE_WAITING + JVMTI_THREAD_STATE_WAITING_INDEFINITELY + JVMTI_THREAD_STATE_IN_OBJECT_WAIT, IN_OBJECT_WAIT_TIMED = JVMTI_THREAD_STATE_ALIVE + // Object.</description>
    </item>
    
    <item>
      <title>如何在国服使用 Apple News</title>
      <link>https://idreamshen.github.io/posts/how-to-use-apple-news-in-china/</link>
      <pubDate>Wed, 07 Mar 2018 14:56:06 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/how-to-use-apple-news-in-china/</guid>
      <description>简介  本文主要介绍如何使用 Apple News
  准备    iPad
  梯子
    首次操作（仅需操作一次）    将 iPad 地区改为美国地区
  将 iPad 语言改为英文
    运行步骤    打开飞行模式
  连接无线网络，且确保自己的 iPad 网络处于梯子上
  找到 News 这个 APP，运行之，理论上就能正常展示新闻信息了
  关闭飞行模式
    效果  News App in iPad
  备注    上述飞行模式的切换不是必须的，但是切换飞行模式后能提高成功率</description>
    </item>
    
    <item>
      <title>Nodejs 鼠标点击</title>
      <link>https://idreamshen.github.io/posts/nodejs-mouse-click/</link>
      <pubDate>Tue, 16 Feb 2016 19:53:47 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/nodejs-mouse-click/</guid>
      <description>今天玩 Clicker Heroes 的时候点鼠标点的累死,要是 mac 下也有个按键精灵就好了.在网上搜索一番后,找到了 robotjs 这个库,正和我意!
于是,三行鼠标左键连点代码就有了.
var robot = require(&amp;#34;robotjs&amp;#34;); robot.setMouseDelay(80); while (true) robot.mouseClick(); 可以轻轻松松在 Clicker Heroes 中刷刷刷啦.
robotjs 的 wiki 可以查阅: https://github.com/octalmage/robotjs</description>
    </item>
    
    <item>
      <title>2015年终小结</title>
      <link>https://idreamshen.github.io/posts/2015-review/</link>
      <pubDate>Sat, 13 Feb 2016 12:12:49 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/2015-review/</guid>
      <description>2015年是毕业后的第一年,工作经验终于增加了一年.这一年的努力如果要打个分的话,我给自己七分.这一年最大的变化是我能熟练的使用 Nodejs 开发各种项目以及开始学习了 Java.那接下来我就谈谈这一年里我对这两门语言的感受吧.
Nodejs 是我这一年里使用次数最多的语言,我用它完成了若干个的项目.总结下来,用 Nodejs 开发有两个优点,开发快和性能高.我先说说开发快,由于 Nodejs 使用了 Javascript 这门语言作为编程语言, Javascript 的动态特性使得其在编写代码时非常简单.第二个优点是性能高,由于 Javascript 支持回调函数,使得异步IO并行操作,节省了大量的等待时间.但是 Nodejs 开发大型合作项目就有点麻烦了.一, IDE 无法很好地做到代码提示,二, 变量名方法名等重构困难.三, 弱类型很容易埋下了隐藏的漏洞.
我举2个实例来看一下 Nodejs 和 Java 在编程上有什么区别.
1.假设需求:通过一个网页向用户展示某件商品的相关信息.
Nodejs 版 (Express Framework)
var express = require(&amp;#39;express&amp;#39;); var app = express(); var Promise = require(&amp;#39;bluebird&amp;#39;); var model = require(&amp;#39;./models/index&amp;#39;); app.get(&amp;#39;/item&amp;#39;, function(req, res) { var itemId = req.query.itemId; var myUserId = req.session.userId; Promise.all([ model.user.findById(myUserId), model.item.findById(itemId), model.itemDetail.findByItemId(itemId) ]).spread(function(user, item, itemDetail) { res.render(&amp;#39;item&amp;#39;, { me: user, item: item, itemDetail: itemDetail }); }).</description>
    </item>
    
    <item>
      <title>Sequelize 中的事务循环插入</title>
      <link>https://idreamshen.github.io/posts/sequelize-transaction/</link>
      <pubDate>Thu, 13 Aug 2015 16:14:13 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/sequelize-transaction/</guid>
      <description>sequelize 的事务模式详细使用方法可以参考官方文档 http://docs.sequelizejs.com/en/latest/docs/transactions
本文主要介绍一下如何在 sequelize 的事务中进行循环插入。 假设有两个模型 Order 和 OrderItem，一条 Order 记录会对应若干条 OrderItem 记录
var Promsise = require(&amp;#39;bluebird&amp;#39;); function insert () { var itemIds = [1,2,3]; return sequelize.transaction(function (t){ return Order.create({ name: &amp;#39;XXX订单&amp;#39;, price: 100 }, {transaction: t}).then(function (order){ return Promise.map(itemIds, function(itemId) { return OrderItem.create({ order_id: order.get(&amp;#39;id&amp;#39;), item_id: itemId }, {transaction: t}); }); }); }); } 解决的方案就是采用 Promise.map 这个方法，它能遍历数组并返回 promise。</description>
    </item>
    
    <item>
      <title>Socket.io 中一些有用的方法</title>
      <link>https://idreamshen.github.io/posts/socket-io-some-useful-funcs/</link>
      <pubDate>Tue, 11 Aug 2015 16:08:32 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/socket-io-some-useful-funcs/</guid>
      <description>io.use 注册中间件。看一下下面的这个例子
// 服务端代码 var io = require(&amp;#39;socket.io&amp;#39;)(); // 引用 socket.io 库并实例化  /** 注册中间件 **/ io.use(function (socket, next) { var query = socket.handshake.query; // 获取客户端的连接 url 中的参数  var password = query.password; // 读取参数中密码  if (password === &amp;#39;123456&amp;#39;) return next(); // 如果密码正确，则执行返回 next()  next(new Error(&amp;#39;密码错误&amp;#39;)); // 如果密码错误，则抛出异常 }); /** 监听事件 **/ io.on(&amp;#39;connection&amp;#39;, function (socket) { socket.on(&amp;#39;disconnect&amp;#39;, function () { // 客户端断线  }); socket.on(&amp;#39;message&amp;#39;, function (body) { // 服务器收到客户端发来的消息  }); }); // 客户端代码 &amp;lt;script src=&amp;#39;/socket.</description>
    </item>
    
    <item>
      <title>Redis 几个常用的简单命令</title>
      <link>https://idreamshen.github.io/posts/redis-func/</link>
      <pubDate>Tue, 11 Aug 2015 15:27:19 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/redis-func/</guid>
      <description>redis-cli 连接数据库 例子：redis-cli 连接到本地 例子：redis-cli -h 192.168.1.27 连接到远程
type 查看某个 key 的类型 例子：type key，返回的结果可能有 string，set，list 等
keys 查看所有的 key 例子：keys *
smembers 查看某个 sets 类型的所有成员 例子：smembers key
hgetall 查看某个 hash 类型的所有成员 例子：hgetall key</description>
    </item>
    
    <item>
      <title>Hello Hexo</title>
      <link>https://idreamshen.github.io/posts/hello-world/</link>
      <pubDate>Tue, 11 Aug 2015 14:46:57 +0800</pubDate>
      
      <guid>https://idreamshen.github.io/posts/hello-world/</guid>
      <description>今天用了下 Hexo，很爽，简洁明了的博客系统。就在这记录些我自己平时的所见所闻吧。</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://idreamshen.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idreamshen.github.io/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
